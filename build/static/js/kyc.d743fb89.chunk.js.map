{"version":3,"sources":["utils/Modal.js","views/app/kyc/index.js","views/app/noKyc/index.js","views/app/customize-field/call_session.js","views/app/customize-field/setting.js","views/app/customize-field/banner.js","views/app/customize-field/expertise.js","views/app/customize-field/image.js","views/app/customize-field/index.js"],"names":["AddNewModal","modalOpen","toggleModal","sidebarMenu","dataId","modalTitle","onSubmit","style","display","justifyContent","maxWidth","margin","padding","marginTop","marginBottom","marginLeft","outline","color","className","onClick","id","isOpen","toggle","wrapClassName","backdrop","CONSTANTS","RIGHT_SIDEBAR_FIELD","map","data","Label","type","size","required","option","length","item","value","label","Kyc","match","location","useState","loading","setLoading","kycData","setKycData","setModalOpen","currentKyc","pathname","replace","url","console","log","onApprove","kyc","onReject","useEffect","getKycRequest","res","index","no","action","fallback","path","render","props","toLowerCase","animation","headers","TABLE_HEADER","KYC","items","filter","advisor","Advisor","expertise","name","advisorId","TABLE_ID","filterParams","to","modelData","previous","basicModal","e","preventDefault","payload","remark","target","approve","approveRejectKyc","refresh","setRefresh","setAdvisorId","getNoKycList","advisors","addAdminHandler","payload2","FormData","append","practicingCourt","practicingLocation","practicingStartDate","aadhar","pan","aadharFile","files","panFile","addKYC","NotificationManager","warning","onAddNewKyc","addModal","titleId","formData","CATEGORY","list","Category","trim","NO_KYC","actionItem","noKyc","CallSesstion","callSessionData","setCallSessionData","currantCallSessionData","setCurrantCallSessionData","isModelOpen","setIsModelOpen","currentAdvisor","getCallSession","callSession","duration","discount","Container","Spinner","add","addCallSession","success","CALL_SESSION","onPositive","deleteCallSession","onNegative","positiveText","negativeText","injectIntl","texData","setTexData","Loading","fullPayToAdvisor","setFullPayToAdvisor","GetCoustomFields","Row","xxs","Card","CardTitle","fontWeight","IntlMessages","CardBody","Form","inHouseAdvisorShare","bonusAmount","setCustomizeFieldCharges","CUSTOMIZE_FEILD","FormGroup","row","for","sm","tagId","Input","apiKey","defaultValue","placeholder","messages","SwitchExamples","checked","onChange","Button","disabled","Banner","loaded","setLoaded","posters","setPosters","currentPoster","setCurrentPoster","deletePopup","poster","getPoster","reverse","position","cursor","width","height","background","borderRadius","opacity","addPoster","BANNER","deletePoster","Expertise","setData","refreash","setRefreash","percentage","setPercentage","updateAction","searches","newCount","updateSpecialization","specialization","deleteHandler","deleteSpecializations","expertiseItem","fetchData","getSpecializations","search","addBulkSpecializationsHandler","userArr","Promise","all","addSpecializations","flexDirection","toFixed","Previous","htmlFor","accept","file","Papa","parse","header","skipEmptyLines","complete","results","Object","values","mobileNumber","userMobileNumber","push","right","top","zIndex","EXPERTISE","Image","textandCharge","setTextandCharge","modal","setModal","editExpertise","setEditExpertise","updateimage","setUpdateimage","flag","setFlag","onChangeImage","getId","Sexologist","process","Lawyer","Psychiatrist","onUpdateImage","updateTextandCharges","userCategoryImg","textandChargeItem","md","lg","onClickEdit","CardImg","src","categoryImage","alt","createdAt","ModalHeader","ModalBody","ModalFooter","CallAmount","React","lazy","Applications","currentAdvisorTax"],"mappings":"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","file":"static/js/kyc.d743fb89.chunk.js","sourcesContent":["import React from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Label,\n  Form,\n  Container,\n} from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport CONSTANTS from './CONSTANTS';\n\nconst AddNewModal = ({\n  modalOpen,\n  toggleModal,\n  sidebarMenu = 'LAWYER_EXPERTISE',\n  dataId,\n  modalTitle,\n  onSubmit = () => {},\n}) => {\n  return (\n    <>\n      <Container\n        style={{\n          display: 'flex',\n          justifyContent: 'end',\n          maxWidth: '100%',\n          margin: '0px',\n          padding: '0',\n          marginTop: '-10px',\n          marginBottom: '15px',\n          marginLeft: '-27px',\n        }}\n      >\n        <Button\n          outline\n          color=\"primary\"\n          className=\"top-right-button\"\n          onClick={() => toggleModal()}\n        >\n          <IntlMessages id={dataId} />\n        </Button>\n      </Container>\n      <Modal\n        isOpen={modalOpen}\n        toggle={toggleModal}\n        wrapClassName=\"modal-right\"\n        backdrop=\"static\"\n      >\n        <ModalHeader toggle={toggleModal}>\n          <IntlMessages id={modalTitle} />\n        </ModalHeader>\n\n        <Form onSubmit={onSubmit}>\n          <ModalBody>\n            {CONSTANTS.RIGHT_SIDEBAR_FIELD[sidebarMenu].map((data) => (\n              <div key={data.id} className=\"mt-2\">\n                <Label>\n                  <IntlMessages id={data.Label} />\n                </Label>\n                {data.type === 'select' ? (\n                  <Input id={data.id} type=\"select\" size=\"1\" required>\n                    {data.option.length > 0 &&\n                      data.option.map((item) => (\n                        <option key={`role_${item.id}`} value={item.value}>\n                          {item.label}\n                        </option>\n                      ))}\n                  </Input>\n                ) : (\n                  <Input {...data} />\n                )}\n              </div>\n            ))}\n          </ModalBody>\n\n          <ModalFooter>\n            <Button color=\"secondary\" outline onClick={toggleModal}>\n              <IntlMessages id=\"advisor.cancel\" />\n            </Button>\n            <Button color=\"primary\">\n              <IntlMessages id=\"advisor.submit\" />\n            </Button>\n          </ModalFooter>\n        </Form>\n      </Modal>\n    </>\n  );\n};\n\nexport default AddNewModal;\n","import ViewTable from 'utils/ReactTableCards';\nimport React, { Suspense, useState, useEffect } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport CONSTANTS from 'utils/CONSTANTS';\nimport { approveRejectKyc, getKycRequest } from 'utils/API/api';\nimport ModalUi from 'utils/BasicModal';\nimport { Container, Spinner } from 'reactstrap';\nimport AdminInfo from '../advisor/advisorInfo';\n\nconst Kyc = ({ match, location }) => {\n  const [loading, setLoading] = useState(false);\n  const [kycData, setKycData] = useState([]);\n  const [modalOpen, setModalOpen] = useState({\n    isOpen: false,\n    type: '',\n    data: {},\n  });\n  const currentKyc = location.pathname.replace(`${match.url}/`, '');\n  console.log(currentKyc);\n  const onApprove = (kyc) => {\n    setModalOpen({ isOpen: true, type: 'approve', data: { kyc } });\n  };\n\n  const onReject = (kyc) => {\n    setModalOpen({ isOpen: true, type: 'reject', data: { kyc } });\n  };\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    (async () => {\n      const payload = {\n        remark: e.target.remark.value,\n      };\n      if (modalOpen.type === 'approve') {\n        payload.approve = true;\n        setModalOpen(false);\n        setLoading(true);\n        const res = await approveRejectKyc(modalOpen.data.kyc.id, payload);\n        if (res !== -1) {\n          setKycData((previous) =>\n            previous\n              .filter((advisor) => advisor.id !== modalOpen.data.kyc.id)\n              .map((advisor, index) => {\n                return { ...advisor, no: index + 1 };\n              })\n          );\n        }\n        setLoading(false);\n      } else {\n        payload.approve = false;\n        setModalOpen(false);\n        setLoading(true);\n        const res = await approveRejectKyc(modalOpen.data.kyc.id, payload);\n        if (res !== -1) {\n          setKycData((previous) =>\n            previous\n              .filter((advisor) => advisor.id !== modalOpen.data.kyc.id)\n              .map((advisor, index) => {\n                return { ...advisor, no: index + 1 };\n              })\n          );\n        }\n        setLoading(false);\n      }\n    })();\n  };\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      const res = await getKycRequest();\n      if (res !== -1) {\n        setKycData(\n          res?.data?.data?.data.map((kyc, index) => {\n            return {\n              ...kyc,\n              no: index + 1,\n              action: [() => onApprove(kyc), () => onReject(kyc)],\n            };\n          })\n        );\n      }\n      setLoading(false);\n    })();\n  }, [currentKyc]);\n\n  return (\n    <>\n      <Suspense fallback={<div className=\"loading\" />}>\n        <Switch>\n          {/* <Redirect exact from={`${match.url}/`} to={`${match.url}/lawyer`} /> */}\n          <Route\n            path={`${match.url}/advisorkycinfo`}\n            render={(props) => <AdminInfo {...props} />}\n          />\n\n          <Route\n            path={`${match.url}/${currentKyc.toLowerCase()}`}\n            render={() =>\n              !loading ? (\n                <ViewTable\n                  headers={CONSTANTS.TABLE_HEADER.KYC}\n                  items={kycData\n                    .filter(\n                      (advisor) => advisor.Advisor.expertise === currentKyc\n                    )\n                    .map((advisor, index) => {\n                      return {\n                        ...advisor,\n                        ...advisor.Advisor,\n                        name: [advisor.Advisor.name, advisor.Advisor.id],\n                        no: index + 1,\n                      };\n                    })}\n                  advisorId={CONSTANTS.TABLE_ID.kyc}\n                  filterParams=\"name\"\n                />\n              ) : (\n                <Container className=\"d-flex justify-content-center align-items-center\">\n                  <Spinner animation=\"border\" className=\"d-inline-flex m-2 \" />\n                </Container>\n              )\n            }\n          />\n\n          <Redirect to=\"/error\" />\n        </Switch>\n      </Suspense>\n      <ModalUi\n        modalOpen={modalOpen.isOpen}\n        modelData={modalOpen}\n        toggleModal={() =>\n          setModalOpen((previous) => {\n            return { ...previous, isOpen: !previous.isOpen };\n          })\n        }\n        basicModal=\"KYC_MODAL\"\n        onSubmit={onSubmitHandler}\n      />\n    </>\n  );\n};\nexport default Kyc;\n","import ViewTable from 'utils/ReactTableCards';\nimport React, { Suspense, useState, useEffect } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport CONSTANTS, { CATEGORY } from 'utils/CONSTANTS';\nimport { addKYC, getNoKycList } from 'utils/API/api';\nimport { Container, Spinner } from 'reactstrap';\nimport AddNewModalWithOutButton from 'components/advisor/add-new-Modal-with-out-button';\nimport { NotificationManager } from 'components/common/react-notifications';\n\nconst Kyc = ({ match, location }) => {\n  const [loading, setLoading] = useState(false);\n  const [kycData, setKycData] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const currentKyc = location.pathname.replace(`${match.url}/`, '');\n  const [advisorId, setAdvisorId] = useState('');\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      const res = await getNoKycList();\n      if (res !== -1) {\n        console.log(res?.data?.advisors);\n        setKycData(\n          res?.data?.advisors.map((kyc, index) => {\n            return {\n              ...kyc,\n              no: index + 1,\n            };\n          })\n        );\n      }\n      setLoading(false);\n    })();\n  }, [currentKyc, refresh]);\n\n  const addAdminHandler = (e) => {\n    e.preventDefault();\n    (async () => {\n      const payload2 = new FormData();\n\n      payload2.append('practicingCourt', e.target.practicingCourt.value);\n      payload2.append('practicingLocation', e.target.practicingLocation.value);\n      payload2.append(\n        'practicingStartDate',\n        e.target.practicingStartDate.value\n      );\n      payload2.append('specification', '');\n      payload2.append('aadhar', e.target.aadhar.value);\n      payload2.append('pan', e.target.pan.value);\n      payload2.append('aadharFile', e.target.aadharFile.files[0]);\n      payload2.append('panFile', e.target.panFile.files[0]);\n      setLoading(true);\n\n      payload2.append('AdvisorId', advisorId);\n\n      const res2 = await addKYC(payload2);\n      if (res2 !== -1) {\n        setRefresh((previous) => !previous);\n        setModalOpen(!modalOpen);\n        setAdvisorId('');\n      } else {\n        NotificationManager.warning(\n          'Advisor KVC not submitted',\n          'Advsor KYC Error',\n          3000,\n          null,\n          null,\n          ''\n        );\n      }\n      setLoading(false);\n    })();\n  };\n\n  const onAddNewKyc = (id) => {\n    setModalOpen((previous) => !previous);\n    setAdvisorId(id);\n  };\n\n  const toggleModel = () => {\n    setAdvisorId('');\n    setModalOpen((previous) => !previous);\n  };\n\n  return (\n    <>\n      <Suspense fallback={<div className=\"loading\" />}>\n        <Switch>\n          <Route\n            path={`${match.url}`}\n            render={() =>\n              !loading ? (\n                <>\n                  <AddNewModalWithOutButton\n                    modalOpen={modalOpen}\n                    toggleModal={() => toggleModel()}\n                    sidebarMenu=\"ADVISOR_KVC_MODAL\"\n                    modalTitle={CONSTANTS.TABLE_ID.addModal}\n                    onSubmit={addAdminHandler}\n                    titleId=\"Edit Category Details\"\n                    formData={{\n                      expertise: CATEGORY.list.map((Category) => {\n                        return {\n                          name: Category?.expertise.trim(),\n                          value: Category?.expertise.trim(),\n                        };\n                      }),\n                    }}\n                  />\n\n                  <ViewTable\n                    headers={CONSTANTS.TABLE_HEADER.NO_KYC}\n                    items={kycData.map((advisor, index) => {\n                      return {\n                        ...advisor,\n                        name: [advisor.name, advisor.id],\n                        no: index + 1,\n                        actionItem: {\n                          onAddNewKyc,\n                          value: advisor.id,\n                        },\n                      };\n                    })}\n                    advisorId={CONSTANTS.TABLE_ID.noKyc}\n                    filterParams=\"name\"\n                  />\n                </>\n              ) : (\n                <Container className=\"d-flex justify-content-center align-items-center\">\n                  <Spinner animation=\"border\" className=\"d-inline-flex m-2 \" />\n                </Container>\n              )\n            }\n          />\n\n          <Redirect to=\"/error\" />\n        </Switch>\n      </Suspense>\n    </>\n  );\n};\nexport default Kyc;\n","import React, { Suspense, useState, useEffect } from 'react';\nimport {\n  addCallSession,\n  deleteCallSession,\n  getCallSession,\n} from 'utils/API/api';\nimport ViewTable from 'utils/ReactTableCards';\nimport { Container, Spinner } from 'reactstrap';\nimport AddNewModal from 'utils/Modal';\nimport AlertPopup from 'components/alert-popup';\nimport { NotificationManager } from 'components/common/react-notifications';\nimport CONSTANTS from 'utils/CONSTANTS';\n\nconst CallSesstion = ({ location }) => {\n  const [callSessionData, setCallSessionData] = useState([]);\n  const [currantCallSessionData, setCurrantCallSessionData] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [isModelOpen, setIsModelOpen] = useState(false);\n  const currentAdvisor = location.pathname.replace(\n    `/app/customize-field/call_session/`,\n    ''\n  );\n\n  const deleteCallSessionData = () => {\n    (async () => {\n      setIsModelOpen(false);\n      setLoading(true);\n      const res = await deleteCallSession(currantCallSessionData.id);\n      if (res !== -1) {\n        NotificationManager.success(\n          `Call Session Data Deleted`,\n          'Delete Data',\n          3000,\n          null,\n          null,\n          ''\n        );\n      }\n      setRefresh(!refresh);\n    })();\n  };\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      const res = await getCallSession(currentAdvisor);\n      if (res !== -1) {\n        setCallSessionData(\n          res?.data?.data?.data.map((callSession, index) => {\n            return {\n              ...callSessionData,\n              no: index + 1,\n              duration: `${callSession.duration}`,\n              discount: `${callSession.discount}`,\n              action: [\n                () => {\n                  setCurrantCallSessionData(callSession);\n                  setIsModelOpen(true);\n                },\n              ],\n            };\n          })\n        );\n      }\n      setLoading(false);\n    })();\n  }, [refresh, currentAdvisor]);\n\n  const addCallSessionData = (e) => {\n    e.preventDefault();\n    (async () => {\n      const payload = {\n        duration: e.target.duration.value,\n        discount: e.target.discount.value,\n        expertise: currentAdvisor,\n      };\n      setLoading(true);\n      const res = await addCallSession(payload);\n      if (res !== -1) {\n        setRefresh((previous) => !previous);\n        setModalOpen(!modalOpen);\n        NotificationManager.success(\n          `Call Session Data Added`,\n          'Add Data',\n          3000,\n          null,\n          null,\n          ''\n        );\n      }\n      setLoading(false);\n    })();\n  };\n\n  return (\n    <>\n      <Suspense fallback={<div className=\"loading\" />}>\n        {!loading ? (\n          <>\n            <AddNewModal\n              sidebarMenu=\"CALL_SESSION\"\n              dataId={CONSTANTS.TABLE_ID.add}\n              modalTitle={CONSTANTS.TABLE_ID.addModal}\n              modalOpen={modalOpen}\n              toggleModal={() => setModalOpen(!modalOpen)}\n              onSubmit={addCallSessionData}\n            />\n            <ViewTable\n              headers={CONSTANTS.TABLE_HEADER.CALL_SESSION}\n              items={callSessionData}\n              advisorId={CONSTANTS.TABLE_ID.callSession}\n              filterParams=\"duration\"\n            />\n          </>\n        ) : (\n          <Container className=\"d-flex justify-content-center align-items-center\">\n            <Spinner\n              animation=\"border\"\n              className=\"d-inline-flex m-2 \"\n              color=\"$theme-color-yellow-granola\"\n            />\n          </Container>\n        )}\n      </Suspense>\n      <AlertPopup\n        isOpen={isModelOpen}\n        toggleModal={() => setIsModelOpen((previous) => !previous)}\n        onPositive={deleteCallSessionData}\n        onNegative={() => setIsModelOpen((previous) => !previous)}\n        positiveText=\"Agree\"\n        negativeText=\"cancel\"\n        warning={`Aar you sure want to delete the duration ${currantCallSessionData?.duration} discount ${currantCallSessionData?.discount}`}\n      />\n    </>\n  );\n};\n\nexport default CallSesstion;\n","import React, { useEffect, useState } from 'react';\nimport {\n  Row,\n  Card,\n  CardBody,\n  Input,\n  FormGroup,\n  Label,\n  Form,\n  CardTitle,\n  Container,\n  Spinner,\n  Button,\n} from 'reactstrap';\nimport { injectIntl } from 'react-intl';\n\nimport 'react-tagsinput/react-tagsinput.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'rc-switch/assets/index.css';\nimport 'rc-slider/assets/index.css';\nimport 'react-rater/lib/react-rater.css';\n\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport CONSTANTS from 'utils/CONSTANTS';\nimport { GetCoustomFields, setCustomizeFieldCharges } from 'utils/API/api';\nimport { NotificationManager } from 'components/common/react-notifications';\nimport SwitchExamples from 'containers/forms/SwitchExamples';\n\nconst SettingsPage = () => {\n  const [texData, setTexData] = useState({});\n  const [Loading, setLoading] = useState(true);\n  const [fullPayToAdvisor, setFullPayToAdvisor] = useState(true);\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      const res = await GetCoustomFields();\n      setTexData(res?.data?.data?.data);\n      setFullPayToAdvisor(res?.data?.data?.data?.fullPayToAdvisor);\n      setLoading(false);\n    })();\n  }, []);\n\n  const OnFromSubmitHandler = (e) => {\n    e.preventDefault();\n    (async () => {\n      const payload = {\n        inHouseAdvisorShare: +e.target.inHouseAdvisorShare.value,\n        bonusAmount: +e.target.bonusAmount.value,\n        fullPayToAdvisor,\n      };\n\n      const res = await setCustomizeFieldCharges(payload);\n      if (res !== -1) {\n        NotificationManager.success(\n          `Data Updated`,\n          'Update Data',\n          3000,\n          null,\n          null,\n          ''\n        );\n      }\n    })();\n  };\n\n  return (\n    <>\n      {!Loading ? (\n        <Row className=\"mb-4\">\n          <Colxx xxs=\"12\">\n            <Card>\n              <CardTitle\n                style={{\n                  marginTop: '31px',\n                  marginBottom: '10px',\n                  fontWeight: '800',\n                  marginLeft: '27px',\n                }}\n              >\n                <IntlMessages id=\"table.react-Customize-fields\" />\n              </CardTitle>\n              <CardBody>\n                <Form onSubmit={OnFromSubmitHandler}>\n                  {CONSTANTS.CUSTOMIZE_FEILD.map((data) => (\n                    <FormGroup key={data.id} row>\n                      <Label for={data.label} sm={4}>\n                        <IntlMessages id={data.tagId} />\n                      </Label>\n                      <Colxx sm={8}>\n                        <Input\n                          type={data.type}\n                          name={data.name}\n                          id={data.apiKey}\n                          defaultValue={\n                            texData[data.apiKey] ? texData[data.apiKey] : ''\n                          }\n                          placeholder={data.messages}\n                        />\n                      </Colxx>\n                    </FormGroup>\n                  ))}\n                  <FormGroup row>\n                    <Label for=\"fullPayToAdvisor\" sm={4}>\n                      <IntlMessages id=\"forms.system-charges\" />\n                    </Label>\n                    <Colxx sm={8}>\n                      <SwitchExamples\n                        checked={fullPayToAdvisor}\n                        onChange={() =>\n                          setFullPayToAdvisor((previous) => !previous)\n                        }\n                      />\n                    </Colxx>\n                  </FormGroup>\n                  <Button color=\"primary\" disabled={Loading}>\n                    <IntlMessages id=\"forms.submit\" />\n                  </Button>\n                </Form>\n              </CardBody>\n            </Card>\n          </Colxx>\n        </Row>\n      ) : (\n        <Container className=\"d-flex justify-content-center align-items-center\">\n          <Spinner\n            animation=\"border\"\n            className=\"d-inline-flex m-2 \"\n            color=\"$theme-color-yellow-granola\"\n          />\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default injectIntl(SettingsPage);\n","import AlertPopup from 'components/alert-popup';\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport React, { useEffect, useState } from 'react';\nimport { Button, CardBody, Row } from 'reactstrap';\nimport { addPoster, deletePoster, getPoster } from 'utils/API/api';\nimport CONSTANTS from 'utils/CONSTANTS';\nimport ViewTable from 'utils/ReactTableCards';\n\nexport default function Banner() {\n  const [loaded, setLoaded] = useState(false);\n  const [posters, setPosters] = useState([]);\n  const [refresh, setRefresh] = useState(false);\n  const [currentPoster, setCurrentPoster] = useState({});\n  const [isModelOpen, setIsModelOpen] = useState(false);\n  const addNewPoster = (e) => {\n    setLoaded(true);\n    (async () => {\n      if (e.target.files[0] !== null) {\n        const payload = new FormData();\n        payload.append('image', e.target.files[0]);\n        const res = await addPoster(payload);\n        if (res !== -1) {\n          setRefresh((previous) => !previous);\n        } else {\n          setLoaded(false);\n        }\n      } else {\n        setLoaded(false);\n      }\n    })();\n  };\n\n  const deletePPosterHandler = () => {\n    setLoaded(true);\n    setIsModelOpen(false);\n    (async () => {\n      const res = await deletePoster(currentPoster.id);\n      if (res !== -1) {\n        setRefresh((previous) => !previous);\n      } else {\n        setLoaded(false);\n      }\n    })();\n  };\n\n  const deletePopup = (poster) => {\n    setCurrentPoster(poster);\n    setIsModelOpen(true);\n  };\n\n  useEffect(() => {\n    (async () => {\n      setLoaded(true);\n      const res = await getPoster();\n      if (res !== -1) {\n\n        setPosters(\n          res?.data?.data?.data.reverse().map((poster, index) => {\n            return {\n              ...poster,\n              no: index + 1,\n              action: [() => deletePopup(poster), false],\n            };\n          })\n        );\n      }\n      setLoaded(false);\n    })();\n  }, [refresh]);\n\n\n  return (\n    <>\n      <Row className=\"survey-app\">\n        <Colxx xxs=\"12\">\n          <div className=\"mb-2\">\n            <h1>Poster</h1>\n            {!loaded && (\n              <div className=\"text-zero top-right-button-container\">\n                <Button color=\"primary\" size=\"lg\" className=\"top-right-button\">\n                  <input\n                    type=\"file\"\n                    style={{\n                      position: 'absolute',\n                      marginLeft: '-41px',\n                      cursor: 'pointer',\n                      width: '151px',\n                      height: '41px',\n                      marginTop: '-10px',\n                      background: '#000',\n                      borderRadius: '60px',\n                      opacity: '0',\n                    }}\n                    onChange={addNewPoster}\n                  />\n                  <IntlMessages id=\"promocode.add-new\" />\n                </Button>\n              </div>\n            )}\n          </div>\n\n          <div className=\"mb-2\">\n            <Button\n              color=\"empty\"\n              className=\"pt-0 pl-0 d-inline-block d-md-none\"\n            >\n              <IntlMessages id=\"promocode.display-options\" />{' '}\n              <i className=\"simple-icon-arrow-down align-middle\" />\n            </Button>\n          </div>\n          <Separator className=\"mb-5\" />\n          <Row>\n            <Colxx sm=\"12\">\n              <CardBody>\n                {!loaded ? (\n                  <ViewTable\n                    headers={CONSTANTS.TABLE_HEADER.BANNER}\n                    items={posters}\n                    advisorId={CONSTANTS.TABLE_ID.poster}\n                    filterParams=\"no\"\n                  />\n                ) : (\n                  <div className=\"loading\" />\n                )}\n              </CardBody>\n            </Colxx>\n          </Row>\n        </Colxx>\n      </Row>\n\n      <AlertPopup\n        isOpen={isModelOpen}\n        toggleModal={() => setIsModelOpen((previous) => !previous)}\n        onPositive={deletePPosterHandler}\n        onNegative={() => setIsModelOpen((previous) => !previous)}\n        positiveText=\"Agree\"\n        negativeText=\"cancel\"\n        warning=\"Aar you sure want to delete the poster ?\"\n      />\n    </>\n  );\n}\n","import { NotificationManager } from 'components/common/react-notifications';\nimport React, { useEffect, useState } from 'react';\nimport { Button, Container, Spinner } from 'reactstrap';\nimport {\n  addSpecializations,\n  deleteSpecializations,\n  getSpecializations,\n  updateSpecialization,\n} from 'utils/API/api';\nimport CONSTANTS from 'utils/CONSTANTS';\nimport AddNewModal from 'utils/Modal';\nimport Papa from 'papaparse';\nimport ViewTable from 'utils/ReactTableCards';\nimport IntlMessages from 'helpers/IntlMessages';\n\nexport default function Expertise({ currentAdvisor }) {\n  const [loading, setLoading] = useState(false);\n  const [data, setData] = useState([]);\n  const [modalOpen, setModalOpen] = useState(false);\n  const [refreash, setRefreash] = useState(false);\n  const [percentage, setPercentage] = useState(['Adding users', 0]);\n\n  const updateAction = (expertise) => {\n    (async () => {\n      const payload = {\n        id: expertise.id,\n        searches: expertise.newCount,\n      };\n      const res = await updateSpecialization(payload);\n      if (res !== -1) {\n        NotificationManager.success(\n          `${expertise.specialization}'s Count Updated`,\n          'Update Count',\n          3000,\n          null,\n          null,\n          ''\n        );\n      }\n    })();\n  };\n\n  const deleteHandler = (expertise) => {\n    (async () => {\n      setLoading(true);\n      await deleteSpecializations(expertise.id);\n      setLoading(false);\n      setData((previous) =>\n        previous\n          .filter((expertiseItem) => expertiseItem.id !== expertise.id)\n          .map((expertiseItem, index) => {\n            return { ...expertiseItem, no: index + 1 };\n          })\n      );\n    })();\n  };\n\n  const addSpecializationsHandler = (e) => {\n    e.preventDefault();\n    (async () => {\n      const payload = {\n        expertise: currentAdvisor,\n        specialization: e.target.specialization.value,\n      };\n      setLoading(true);\n      const res = await addSpecializations(payload);\n      if (res !== -1) {\n        setModalOpen(!modalOpen);\n      }\n\n      setLoading(false);\n      setRefreash((Previous) => !Previous);\n    })();\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const res = await getSpecializations(currentAdvisor);\n\n        setData(\n          res?.data?.data?.data.map((expertise, index) => {\n            return {\n              ...expertise,\n              no: index + 1,\n              action: [() => deleteHandler(expertise), false],\n              search: [\n                expertise.searches,\n                (e) => updateAction({ ...expertise, newCount: e.target.value }),\n              ],\n            };\n          })\n        );\n        setLoading(false);\n      } catch (error) {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [currentAdvisor, refreash]);\n\n  const addBulkSpecializationsHandler = (userArr) => {\n    (async () => {\n      setLoading(true);\n\n      await Promise.all(\n        userArr.map(async (item, index) => {\n          try {\n            const payload = {\n              expertise: currentAdvisor,\n              specialization: item,\n            };\n\n            await addSpecializations(payload);\n            setPercentage(['Adding users', (index / userArr.length) * 100]);\n          } catch (e) {\n            NotificationManager.warning(\n              `${item} is not correct Formate For Mobile number`,\n              3000,\n              null,\n              null,\n              ''\n            );\n          }\n          return item + 1;\n        })\n      );\n\n      setRefreash((previous) => !previous);\n      setPercentage(['Adding users', 0]);\n      setLoading(false);\n    })();\n  };\n\n  const addExpertisetoCsv = (file) => {\n    Papa.parse(file, {\n      header: true,\n      skipEmptyLines: true,\n      complete: async (results) => {\n        const userArr = [];\n        Object.values(results.data).map((mobileNumber) => {\n          const [userMobileNumber] = Object.values(mobileNumber);\n          console.log('userMobileNumber', userMobileNumber);\n          userArr.push(userMobileNumber);\n          return 0;\n        });\n\n        addBulkSpecializationsHandler(userArr);\n      },\n    });\n  };\n\n  return !loading ? (\n    <>\n      <AddNewModal\n        sidebarMenu=\"LAWYER_EXPERTISE\"\n        dataId={CONSTANTS.TABLE_ID.add}\n        modalTitle={CONSTANTS.TABLE_ID.addModal}\n        modalOpen={modalOpen}\n        toggleModal={() => setModalOpen(!modalOpen)}\n        onSubmit={addSpecializationsHandler}\n      />\n      <label\n        htmlFor=\"userCsv\"\n        style={{ marginTop: '-53px', position: 'absolute' }}\n      >\n        <input\n          style={{\n            position: 'absolute',\n            marginLeft: '10px',\n            width: '171px',\n            height: '37px',\n            opacity: '0',\n          }}\n          type=\"file\"\n          accept=\".csv\"\n          id=\"userCsv\"\n          onChange={(e) => addExpertisetoCsv(e?.target?.files[0])}\n        />\n        <Button\n          outline\n          type=\"cancel\"\n          color=\"primary\"\n          style={{\n            marginLeft: 'auto',\n            marginBottom: '14px',\n            right: '15px',\n            top: '-50px',\n            zIndex: '100',\n          }}\n          className=\"top-right-button\"\n        >\n          <IntlMessages id=\"table.react-button-expertise-user\" />\n        </Button>\n      </label>\n\n      <ViewTable\n        headers={CONSTANTS.TABLE_HEADER.EXPERTISE}\n        items={data\n          .filter((advisor) => advisor.expertise === currentAdvisor)\n          .map((advisor, index) => {\n            return {\n              ...advisor,\n              no: index + 1,\n            };\n          })}\n        advisorId={currentAdvisor}\n        filterParams=\"specialization\"\n      />\n    </>\n  ) : (\n    <Container\n      className=\"d-flex justify-content-center align-items-center\"\n      style={{ flexDirection: 'column' }}\n    >\n      {percentage[1] > 0 && (\n        <p>{`${percentage[0]} ${percentage[1].toFixed(0)}%`}</p>\n      )}\n      <Spinner\n        animation=\"border\"\n        className=\"d-inline-flex m-2 \"\n        color=\"$theme-color-yellow-granola\"\n      />\n    </Container>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  Row,\n  Card,\n  CardBody,\n  CardImg,\n  CardTitle,\n  Button,\n  Container,\n  Spinner,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from 'reactstrap';\nimport { updateTextandCharges, userCategoryImg } from 'utils/API/api';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nconst Image = () => {\n  const [textandCharge, setTextandCharge] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [modal, setModal] = useState(false);\n  const [editExpertise, setEditExpertise] = useState({});\n  const [updateimage, setUpdateimage] = useState('');\n  const [flag, setFlag] = useState(true);\n  const toggle = () => setModal(!modal);\n\n  const onChangeImage = async (e) => {\n    setUpdateimage(e.target.files[0]);\n  };\n\n  const getId = {\n    Sexologist: process.env.REACT_APP_BASE_URL_SEXOLOGIST,\n    Lawyer: process.env.REACT_APP_BASE_URL_LAWYER,\n    Psychiatrist: process.env.REACT_APP_BASE_URL_PSYCHIATRIST,\n  };\n\n  const onUpdateImage = async (name) => {\n    const formData = new FormData();\n    formData.append('categoryImage', updateimage);\n    await updateTextandCharges(getId[name], formData);\n    setFlag(!flag);\n    toggle();\n  };\n\n  const onClickEdit = (textandChargeItem) => {\n    toggle();\n    setEditExpertise(textandChargeItem.expertise);\n  };\n\n  useEffect(async () => {\n    setLoading(true);\n    const res = await userCategoryImg();\n    setTextandCharge(res?.data?.data?.data);\n    setLoading(false);\n  }, [flag]);\n\n  return (\n    <>\n      <Row className=\"survey-app\">\n        <Colxx xxs=\"12\">\n          <div className=\"mb-2\">\n            <h1>Image(189 * 237)</h1>\n          </div>\n        </Colxx>\n      </Row>\n      {!loading ? (\n        <Row>\n          {textandCharge.length >= 0 &&\n            textandCharge.map((textandChargeItem) => {\n              return (\n                <Colxx sm=\"12\" md=\"6\" lg=\"4\" key={textandChargeItem.createdAt}>\n                  <Card>\n                    <CardBody className=\"px-3 pb-0 d-flex align-items-center justify-content-between\">\n                      <CardTitle>{textandChargeItem.expertise}</CardTitle>\n                      <div>\n                        <Button\n                          outline\n                          size=\"sm\"\n                          color=\"primary\"\n                          onClick={() => onClickEdit(textandChargeItem)}\n                        >\n                          Edit\n                        </Button>\n                      </div>\n                    </CardBody>\n                    <CardImg\n                      className=\"p-3\"\n                      top\n                      width=\"100%\"\n                      src={textandChargeItem.categoryImage}\n                      alt=\"Card image cap\"\n                    />\n                  </Card>\n                </Colxx>\n              );\n            })}\n        </Row>\n      ) : (\n        <Container className=\"d-flex justify-content-center align-items-center\">\n          <Spinner\n            animation=\"border\"\n            className=\"d-inline-flex m-2 \"\n            color=\"$theme-color-yellow-granola\"\n          />\n        </Container>\n      )}\n\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>{editExpertise}</ModalHeader>\n        <ModalBody>\n          <input type=\"file\" onChange={(e) => onChangeImage(e)} />\n        </ModalBody>\n        <ModalFooter>\n          <Button outline size=\"sm\" color=\"primary\" onClick={toggle}>\n            Cancel\n          </Button>{' '}\n          <Button\n            outline\n            size=\"sm\"\n            color=\"primary\"\n            onClick={() => onUpdateImage(editExpertise)}\n          >\n            Update\n          </Button>\n        </ModalFooter>\n      </Modal>\n    </>\n  );\n};\n\nexport default Image;\n","import React, { Suspense } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport CallSesstion from './call_session';\nimport SettingsPage from './setting';\nimport Banner from './banner';\nimport Expertise from './expertise';\nimport Image from './image';\n\nconst CallAmount = React.lazy(() =>\n  import(/* webpackChunkName: \"application-call-amount\" */ './call_amount')\n);\n\nconst Applications = ({ match, location }) => {\n  const currentAdvisor = location.pathname.replace(\n    `${match.url}/expertise/`,\n    ''\n  );\n  const currentAdvisorTax = location.pathname.replace(\n    `${match.url}/call-amount/`,\n    ''\n  );\n\n  return (\n    <Suspense fallback={<div className=\"loading\" />}>\n      <Switch>\n        <Route\n          path={`${match.url}/call-amount/${currentAdvisorTax.toLowerCase()}`}\n          render={(props) => <CallAmount {...props} />}\n        />\n        <Route\n          path={`${match.url}/expertise/${currentAdvisor}`}\n          render={(props) => (\n            <Expertise currentAdvisor={currentAdvisor} {...props} />\n          )}\n        />\n        <Route path={`${match.url}/banner`} render={() => <Banner />} />\n        <Route path={`${match.url}/image`} render={() => <Image />} />\n        <Route\n          path={`${match.url}/call_session`}\n          render={(props) => <CallSesstion {...props} />}\n        />\n        <Route\n          path={`${match.url}/setting`}\n          render={(props) => <SettingsPage {...props} />}\n        />\n\n        <Redirect to=\"/error\" />\n      </Switch>\n    </Suspense>\n  );\n};\nexport default Applications;\n"],"sourceRoot":""}