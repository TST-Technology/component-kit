{"version":3,"sources":["views/app/account/index.js"],"names":["Account","match","useState","advisorTransaction","setAdvisorTransaction","loading","setLoading","useEffect","getAdvisorTransaction","res","data","map","transaction","index","name","Advisor","createdAt","moment","local","format","no","fallback","className","path","url","render","headers","CONSTANTS","TABLE_HEADER","ADVISORS_TRANSACTION","items","advisorId","TABLE_ID","adminTransaction","filterParams","to"],"mappings":"wNAsDeA,UA/CC,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACjB,EAAoDC,mBAAS,IAA7D,mBAAOC,EAAP,KAA2BC,EAA3B,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAsBA,OApBAC,qBAAU,WACR,gCAAC,yGACCD,GAAW,GADZ,SAEmBE,cAFnB,QAGc,KADPC,EAFP,SAIGL,EAAqB,OACnBK,QADmB,IACnBA,GADmB,UACnBA,EAAKC,YADc,iBACnB,EAAWA,YADQ,aACnB,EAAiBA,KAAKC,KAAI,SAACC,EAAaC,GAAW,IAAD,EAChD,OAAO,2BACFD,GADL,IAEEE,KAAI,OAAEF,QAAF,IAAEA,GAAF,UAAEA,EAAaG,eAAf,aAAE,EAAsBD,KAC5BE,UAAWC,IAAM,OAACL,QAAD,IAACA,OAAD,EAACA,EAAaI,WAAWE,QAAQC,OAAO,iBACzDC,GAAIP,EAAQ,GAEf,KAGLP,GAAW,GAfZ,0CAAD,EAiBD,GAAE,IAGD,cAAC,WAAD,CAAUe,SAAU,qBAAKC,UAAU,YAAnC,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,KAAI,UAAKtB,EAAMuB,IAAX,wBACJC,OAAQ,kBACLpB,EAQC,6BAPA,cAAC,IAAD,CACEqB,QAASC,IAAUC,aAAaC,qBAChCC,MAAO3B,EACP4B,UAAWJ,IAAUK,SAASC,iBAC9BC,aAAa,QANX,IAaV,cAAC,IAAD,CAAUC,GAAG,eAIpB,C","file":"static/js/account.3928b401.chunk.js","sourcesContent":["import ViewTable from 'utils/ReactTableCards';\nimport React, { Suspense, useEffect, useState } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport CONSTANTS from 'utils/CONSTANTS';\nimport { getAdvisorTransaction } from 'utils/API/api';\nimport moment from 'moment';\n\nconst Account = ({ match }) => {\n  const [advisorTransaction, setAdvisorTransaction] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      const res = await getAdvisorTransaction();\n      if (res !== -1) {\n        setAdvisorTransaction(\n          res?.data?.data?.data.map((transaction, index) => {\n            return {\n              ...transaction,\n              name: transaction?.Advisor?.name,\n              createdAt: moment(transaction?.createdAt).local().format('Do MMMM, YYYY'),\n              no: index + 1,\n            };\n          })\n        );\n      }\n      setLoading(false);\n    })();\n  }, []);\n\n  return (\n    <Suspense fallback={<div className=\"loading\" />}>\n      <Switch>\n        <Route\n          path={`${match.url}/advisor-transaction`}\n          render={() =>\n            !loading ? (\n              <ViewTable\n                headers={CONSTANTS.TABLE_HEADER.ADVISORS_TRANSACTION}\n                items={advisorTransaction}\n                advisorId={CONSTANTS.TABLE_ID.adminTransaction}\n                filterParams=\"name\"\n              />\n            ) : (\n              <></>\n            )\n          }\n        />\n        <Redirect to=\"/error\" />\n      </Switch>\n    </Suspense>\n  );\n};\nexport default Account;\n"],"sourceRoot":""}