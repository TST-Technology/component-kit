{"version":3,"sources":["components/coupons/PromoCodeList.js","containers/coupons/AddNewPromoCode.js","views/app/coupons/promocode.js"],"names":["PromoCodeList","item","onDelete","xxs","Card","className","CardBody","to","id","status","couponCode","moment","createdAt","local","format","style","fontSize","Badge","color","labelColor","pill","discountPerc","onClick","detail","React","memo","initialState","name","validity","connect","todoApp","labels","categories","addTodoItemAction","addTodoItem","modalOpen","toggleModal","addPromoCode","useState","state","setState","Modal","isOpen","toggle","wrapClassName","backdrop","ModalHeader","IntlMessages","ModalBody","Label","Input","type","defaultValue","onChange","event","target","value","placeholder","options","map","x","i","label","key","ModalFooter","Button","outline","payload","addNetItem","injectIntl","Coupons","searchKeyword","loaded","orderColumn","orderColumns","selectedItems","getTodoListAction","getTodoList","getTodoListWithOrderAction","getTodoListWithOrder","getTodoListSearchAction","getTodoListSearch","selectedTodoItemsChangeAction","selectedTodoItemsChange","setModalOpen","displayOptionsIsOpen","setDisplayOptionsIsOpen","setCoupons","currantCoupon","setCurrantCoupon","setLoaded","refresh","setRefresh","isModelOpen","setIsModelOpen","useEffect","getCoupon","res","data","previous","onPositive","deleteCoupon","filter","oldCoupon","onNegative","positiveText","negativeText","warning","Row","size","length","index","coupon","Alert","addCoupon"],"mappings":"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","file":"static/js/application-promocode.2c7f636f.chunk.js","sourcesContent":["import React from 'react';\nimport moment from 'moment';\nimport { Card, CardBody, Badge } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nimport { MenuItem } from 'react-contextmenu';\nimport { Colxx } from '../common/CustomBootstrap';\n\nconst PromoCodeList = ({ item, onDelete }) => {\n  return (\n    <>\n      <Colxx xxs=\"12\">\n        <Card className=\"card d-flex mb-3\">\n          <div className=\"d-flex flex-grow-1 min-width-zero\">\n            <CardBody className=\"align-self-center d-flex flex-column flex-md-row justify-content-between min-width-zero align-items-md-center\">\n              <NavLink\n                to={`/app/coupons/promoDetails/${item.id}`}\n                id={`toggler${item.id}`}\n                className=\"list-item-heading mb-0 truncate w-40 w-xs-100  mb-1 mt-1\"\n              >\n                <i\n                  className={`${item.status === 'ACTIVE'\n                      ? 'simple-icon-check heading-icon'\n                      : 'simple-icon-refresh heading-icon'\n                    }`}\n                />\n                <span className=\"align-middle d-inline-block\">\n                  {item.couponCode}\n                </span>\n              </NavLink>\n              <p className=\"mb-1 text-muted text-small w-15 w-xs-100\">\n                User Count: {item.id}\n              </p>\n              <p className=\"mb-1 text-muted text-small w-15 w-xs-100\">\n                {moment(item.createdAt).local().format('Do MMMM, YYYY')}\n              </p>\n              <div className=\"w-15\" style={{ fontSize: '20px' }}>\n                <Badge color={item.labelColor} pill>\n                  {`${item.discountPerc} %`}\n                </Badge>\n              </div>\n              <MenuItem\n                onClick={() => onDelete(item)}\n              // onClick={onContextMenuClick}\n              // data={{ action: 'delete' }}\n              >\n                <i className=\"simple-icon-trash\" />\n              </MenuItem>\n            </CardBody>\n          </div>\n          <div className=\"card-body pt-1\">\n            <p className=\"mb-0\">{item?.detail}</p>\n          </div>\n        </Card>\n      </Colxx>\n    </>\n  );\n};\n\nexport default React.memo(PromoCodeList);\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n  Input,\n  Label,\n} from 'reactstrap';\nimport IntlMessages from 'helpers/IntlMessages';\nimport { addTodoItem } from 'redux/actions';\n\nconst initialState = {\n  name: '',\n  detail: '',\n  discountPerc: 0,\n  validity: 0,\n};\n\nconst AddNewPromoCode = ({ modalOpen, toggleModal, addPromoCode, labels }) => {\n  const [state, setState] = useState(initialState);\n\n  const addNetItem = () => {\n    const payload = {\n      name: state.name,\n      detail: state.detail,\n      discountPerc: state.discountPerc,\n      validity: state.validity,\n    };\n\n    addPromoCode(payload);\n    toggleModal();\n    setState(initialState);\n  };\n\n  return (\n    <Modal\n      isOpen={modalOpen}\n      toggle={toggleModal}\n      labels\n      wrapClassName=\"modal-right\"\n      backdrop=\"static\"\n    >\n      <ModalHeader toggle={toggleModal}>\n        <IntlMessages id=\"promocode.add-new-title\" />\n      </ModalHeader>\n      <ModalBody>\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"promocode.title\" />\n        </Label>\n        <Input\n          type=\"text\"\n          defaultValue={state.name}\n          onChange={(event) => setState({ ...state, name: event.target.value })}\n        />\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"promocode.detail\" />\n        </Label>\n        <Input\n          type=\"textarea\"\n          defaultValue={state.detail}\n          onChange={(event) =>\n            setState({ ...state, detail: event.target.value })\n          }\n        />\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"promocode.label\" />\n        </Label>\n        <Input\n          type=\"number\"\n          placeholder=\"Enter Discount in %\"\n          options={labels.map((x, i) => {\n            return {\n              label: x.label,\n              value: x.label,\n              key: i,\n              color: x.color,\n            };\n          })}\n          defaultValue={state.discountPerc}\n          onChange={(event) =>\n            setState({ ...state, discountPerc: event.target.value })\n          }\n        />\n        <Label className=\"mt-4\">\n          <IntlMessages id=\"promocode.expiryDay\" />\n        </Label>\n        <Input\n          type=\"number\"\n          placeholder=\"How many days from the date of creation\"\n          options={labels.map((x, i) => {\n            return {\n              label: x.label,\n              value: x.label,\n              key: i,\n              color: x.color,\n            };\n          })}\n          defaultValue={state.validity}\n          onChange={(event) =>\n            setState({ ...state, validity: event.target.value })\n          }\n        />\n      </ModalBody>\n      <ModalFooter>\n        <Button color=\"secondary\" outline onClick={toggleModal}>\n          <IntlMessages id=\"promocode.cancel\" />\n        </Button>\n        <Button color=\"primary\" onClick={() => addNetItem()}>\n          <IntlMessages id=\"promocode.submit\" />\n        </Button>{' '}\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = ({ todoApp }) => {\n  const { labels, categories } = todoApp;\n  return {\n    labels,\n    categories,\n  };\n};\nexport default connect(mapStateToProps, {\n  addTodoItemAction: addTodoItem,\n})(AddNewPromoCode);\n","/* eslint-disable react/no-array-index-key */\nimport React, { useState, useEffect } from 'react';\nimport { Alert, Button, Row } from 'reactstrap';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\n\nimport { Colxx, Separator } from 'components/common/CustomBootstrap';\n\nimport {\n  getTodoList,\n  getTodoListWithOrder,\n  getTodoListSearch,\n  selectedTodoItemsChange,\n} from 'redux/actions';\nimport PromoCodeList from 'components/coupons/PromoCodeList';\nimport AddNewPromoCode from 'containers/coupons/AddNewPromoCode';\n// import PromoCodeMenu from 'containers/coupons/PromoCodeMenu';\nimport { addCoupon, deleteCoupon, getCoupon } from 'utils/API/api';\nimport IntlMessages from 'helpers/IntlMessages';\nimport AlertPopup from 'components/alert-popup';\n\n// const getIndex = (value, arr, prop) => {\n//   for (let i = 0; i < arr.length; i += 1) {\n//     if (arr[i][prop] === value) {\n//       return i;\n//     }\n//   }\n//   return -1;\n// };\n\nconst TodoApp = () => {\n  const [modalOpen, setModalOpen] = useState(false);\n  const [displayOptionsIsOpen, setDisplayOptionsIsOpen] = useState(false);\n  // const [lastChecked, setLastChecked] = useState(null);\n  const [Coupons, setCoupons] = useState([]);\n  const [currantCoupon, setCurrantCoupon] = useState({});\n  const [loaded, setLoaded] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [isModelOpen, setIsModelOpen] = useState(false);\n\n  useEffect(() => {\n    (async () => {\n      setLoaded(true);\n      const res = await getCoupon();\n      if (res !== -1) {\n\n        setCoupons(res?.data?.data?.data);\n      }\n      setLoaded(false);\n    })();\n  }, [refresh]);\n\n  const DeleteCoupon = () => {\n    (async () => {\n      setLoaded(true);\n      setIsModelOpen(false);\n      const res = await deleteCoupon(currantCoupon.id);\n      if (res !== -1) {\n        setCoupons((previous) =>\n          previous.filter((oldCoupon) => oldCoupon.id !== currantCoupon.id)\n        );\n      }\n      setLoaded(false);\n    })();\n  };\n\n  const addPromoCode = (coupon) => {\n\n    (async () => {\n      setLoaded(true);\n      const res = await addCoupon(coupon);\n      if (res !== -1) {\n        setRefresh((previous) => !previous);\n      }\n      setLoaded(false);\n    })();\n  };\n  return (\n    <>\n      <AlertPopup\n        isOpen={isModelOpen}\n        toggleModal={() => setIsModelOpen((previous) => !previous)}\n        onPositive={DeleteCoupon}\n        onNegative={() => setIsModelOpen((previous) => !previous)}\n        positiveText=\"Agree\"\n        negativeText=\"cancel\"\n        warning=\"Aar you sure want to delete the coupon\"\n      />\n      <Row className=\"app-row survey-app\">\n        <Colxx xxs=\"12\">\n          <div className=\"mb-2\">\n            <h1>\n              <IntlMessages id=\"menu.promocode\" />\n            </h1>\n            {!loaded && (\n              <div className=\"text-zero top-right-button-container\">\n                <Button\n                  color=\"primary\"\n                  size=\"lg\"\n                  className=\"top-right-button\"\n                  onClick={() => setModalOpen(true)}\n                >\n                  <IntlMessages id=\"promocode.add-new\" />\n                </Button>\n              </div>\n            )}\n          </div>\n\n          <div className=\"mb-2\">\n            <Button\n              color=\"empty\"\n              className=\"pt-0 pl-0 d-inline-block d-md-none\"\n              onClick={() => setDisplayOptionsIsOpen(!displayOptionsIsOpen)}\n            >\n              <IntlMessages id=\"promocode.display-options\" />{' '}\n              <i className=\"simple-icon-arrow-down align-middle\" />\n            </Button>\n          </div>\n          <Separator className=\"mb-5\" />\n          <Row>\n            {!loaded ? (\n              Coupons.length !== 0 &&\n              Coupons.map((item, index) => (\n                <PromoCodeList\n                  key={`todo_item_${index}`}\n                  item={item}\n                  onDelete={(coupon) => {\n                    setIsModelOpen(true);\n                    setCurrantCoupon(coupon);\n                  }}\n                />\n              ))\n            ) : (\n              <div className=\"loading\" />\n            )}\n          </Row>\n          {!loaded && Coupons.length === 0 && (\n            <Alert color=\"danger\" className=\"mt-4\">\n              <IntlMessages id=\"alert.danger-text\" />\n            </Alert>\n          )}\n        </Colxx>\n      </Row>\n\n      {/* {!loaded && Coupons.length !== 0 && <PromoCodeMenu />} */}\n      <AddNewPromoCode\n        toggleModal={() => setModalOpen(!modalOpen)}\n        modalOpen={modalOpen}\n        addPromoCode={addPromoCode}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = ({ todoApp }) => {\n  const {\n    Coupons,\n    searchKeyword,\n    loaded,\n    orderColumn,\n    orderColumns,\n    selectedItems,\n  } = todoApp;\n  return {\n    Coupons,\n    searchKeyword,\n    loaded,\n    orderColumn,\n    orderColumns,\n    selectedItems,\n  };\n};\nexport default injectIntl(\n  connect(mapStateToProps, {\n    getTodoListAction: getTodoList,\n    getTodoListWithOrderAction: getTodoListWithOrder,\n    getTodoListSearchAction: getTodoListSearch,\n    selectedTodoItemsChangeAction: selectedTodoItemsChange,\n  })(TodoApp)\n);\n"],"sourceRoot":""}