{"version":3,"sources":["views/app/customize-field/call_amount.js"],"names":["injectIntl","intl","location","messages","useState","texData","setTexData","Loading","setLoading","currentAdvisor","pathname","replace","useEffect","getTaxCharges","res","console","log","data","length","className","animation","color","xxs","style","marginTop","marginBottom","fontWeight","marginLeft","onSubmit","e","preventDefault","payload","taxPerc","target","value","serviceChargePerc","avgDuration","setTaxCharges","id","NotificationManager","success","CONSTANTS","CALL_AMOUNT","map","row","for","label","sm","tagId","type","name","apiKey","defaultValue","placeholder"],"mappings":"yVAoIeA,uBAvGO,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACrBC,EAAaF,EAAbE,SACR,EAA8BC,mBAAS,CAAC,GAAxC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAEMC,EAAiBP,EAASQ,SAASC,QAAlB,oCAErB,IAGFC,qBAAU,WACR,gCAAC,iHACCJ,GAAW,GADZ,SAEmBK,YAAcJ,GAFjC,OAEOK,EAFP,OAGCC,QAAQC,IAAR,OAAYF,QAAZ,IAAYA,GAAZ,UAAYA,EAAKG,YAAjB,iBAAY,EAAWA,YAAvB,aAAY,EAAiBA,KAAK,IAClCX,GACK,OAAHQ,QAAG,IAAHA,GAAA,UAAAA,EAAKG,YAAL,mBAAWA,YAAX,eAAiBA,KAAKC,QAAS,EAA/B,OAAmCJ,QAAnC,IAAmCA,GAAnC,UAAmCA,EAAKG,YAAxC,iBAAmC,EAAWA,YAA9C,aAAmC,EAAiBA,KAAK,GAAK,CAAC,GAEjET,GAAW,GAPZ,0CAAD,EASD,GAAE,CAACC,IAwBJ,OACE,mCACIF,EA6CA,cAAC,IAAD,CAAWY,UAAU,mDAArB,SACE,cAAC,IAAD,CACEC,UAAU,SACVD,UAAU,qBACVE,MAAM,kCAhDV,cAAC,IAAD,CAAKF,UAAU,OAAf,SACE,cAAC,IAAD,CAAOG,IAAI,KAAX,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,MAAO,CACLC,UAAW,OACXC,aAAc,OACdC,WAAY,MACZC,WAAY,QALhB,SAQE,4BAAIlB,MAEN,cAAC,IAAD,UACE,eAAC,IAAD,CAAMmB,SAvCQ,SAACC,GAC3BA,EAAEC,iBACF,gCAAC,qGACOC,EAAU,CACdC,SAAUH,EAAEI,OAAOD,QAAQE,MAC3BC,mBAAoBN,EAAEI,OAAOE,kBAAkBD,MAC/CE,aAAcP,EAAEI,OAAOG,YAAYF,OAJtC,SAOmBG,aAAa,OAAChC,QAAD,IAACA,OAAD,EAACA,EAASiC,GAAIP,GAP9C,QAQc,IARd,QASGQ,IAAoBC,QAApB,UACK/B,EADL,mBAEE,cACA,IACA,KACA,KACA,IAfL,0CAAD,EAmBD,EAkBa,UACGgC,IAAUC,YAAYC,KAAI,SAAC1B,GAAD,OACzB,eAAC,IAAD,CAAyB2B,KAAG,EAA5B,UACE,cAAC,IAAD,CAAOC,IAAK5B,EAAK6B,MAAOC,GAAI,EAA5B,SACE,cAAC,IAAD,CAAcT,GAAIrB,EAAK+B,UAEzB,cAAC,IAAD,CAAOD,GAAI,EAAX,SACE,cAAC,IAAD,CACEE,KAAMhC,EAAKgC,KACXC,KAAMjC,EAAKiC,KACXZ,GAAIrB,EAAKkC,OACTC,aACEnC,EAAKkC,OAAS9C,EAAO,OAACY,QAAD,IAACA,OAAD,EAACA,EAAMkC,QAAU,GAExCE,YACEpC,EAAKd,SAAWA,EAAQ,OAACc,QAAD,IAACA,OAAD,EAACA,EAAMd,UAAY,SAbnCc,EAAKqB,GADI,IAoB3B,cAAC,IAAD,CAAQjB,MAAM,UAAd,SACE,cAAC,IAAD,CAAciB,GAAG,gCAkBpC,G","file":"static/js/application-call-amount.ad689700.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  Row,\n  Card,\n  CardBody,\n  Input,\n  FormGroup,\n  Label,\n  Form,\n  CardTitle,\n  Container,\n  Spinner,\n  Button,\n} from 'reactstrap';\nimport { injectIntl } from 'react-intl';\n\nimport 'react-tagsinput/react-tagsinput.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport 'rc-switch/assets/index.css';\nimport 'rc-slider/assets/index.css';\nimport 'react-rater/lib/react-rater.css';\n\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nimport IntlMessages from 'helpers/IntlMessages';\nimport CONSTANTS from 'utils/CONSTANTS';\nimport { getTaxCharges, setTaxCharges } from 'utils/API/api';\nimport { NotificationManager } from 'components/common/react-notifications';\n\nconst FormLayoutsUi = ({ intl, location }) => {\n  const { messages } = intl;\n  const [texData, setTexData] = useState({});\n  const [Loading, setLoading] = useState(true);\n\n  const currentAdvisor = location.pathname.replace(\n    `/app/customize-field/call-amount/`,\n    ''\n  );\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      const res = await getTaxCharges(currentAdvisor);\n      console.log(res?.data?.data?.data[0]);\n      setTexData(\n        res?.data?.data?.data.length > 0 ? res?.data?.data?.data[0] : {}\n      );\n      setLoading(false);\n    })();\n  }, [currentAdvisor]);\n\n  const OnFromSubmitHandler = (e) => {\n    e.preventDefault();\n    (async () => {\n      const payload = {\n        taxPerc: +e.target.taxPerc.value,\n        serviceChargePerc: +e.target.serviceChargePerc.value,\n        avgDuration: +e.target.avgDuration.value,\n      };\n\n      const res = await setTaxCharges(texData?.id, payload);\n      if (res !== -1) {\n        NotificationManager.success(\n          `${currentAdvisor}'s Data Updated`,\n          'Update Data',\n          3000,\n          null,\n          null,\n          ''\n        );\n      }\n    })();\n  };\n  return (\n    <>\n      {!Loading ? (\n        <Row className=\"mb-4\">\n          <Colxx xxs=\"12\">\n            <Card>\n              <CardTitle\n                style={{\n                  marginTop: '31px',\n                  marginBottom: '10px',\n                  fontWeight: '800',\n                  marginLeft: '27px',\n                }}\n              >\n                <p>{currentAdvisor}</p>\n              </CardTitle>\n              <CardBody>\n                <Form onSubmit={OnFromSubmitHandler}>\n                  {CONSTANTS.CALL_AMOUNT.map((data) => (\n                    <FormGroup key={data.id} row>\n                      <Label for={data.label} sm={3}>\n                        <IntlMessages id={data.tagId} />\n                      </Label>\n                      <Colxx sm={9}>\n                        <Input\n                          type={data.type}\n                          name={data.name}\n                          id={data.apiKey}\n                          defaultValue={\n                            data.apiKey ? texData[data?.apiKey] : ''\n                          }\n                          placeholder={\n                            data.messages ? messages[data?.messages] : ''\n                          }\n                        />\n                      </Colxx>\n                    </FormGroup>\n                  ))}\n                  <Button color=\"primary\">\n                    <IntlMessages id=\"forms.submit\" />\n                  </Button>\n                </Form>\n              </CardBody>\n            </Card>\n          </Colxx>\n        </Row>\n      ) : (\n        <Container className=\"d-flex justify-content-center align-items-center\">\n          <Spinner\n            animation=\"border\"\n            className=\"d-inline-flex m-2 \"\n            color=\"$theme-color-yellow-granola\"\n          />\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default injectIntl(FormLayoutsUi);\n"],"sourceRoot":""}