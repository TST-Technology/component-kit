{"version":3,"sources":["views/app/advisor/index.js"],"names":["Advisor","match","location","useState","advisorData","setAdvisorData","loading","setLoading","updateLoading","setUpdateLoading","refresh","setRefresh","modalOpen","setModalOpen","currentAdvisor","pathname","replace","url","useEffect","getAllAdvisors","res","console","log","data","map","advisor","index","no","name","id","addAdminHandler","e","preventDefault","payload1","FormData","payload2","append","target","value","charges","upiId","profile","files","about","mobile","expertise","trim","license","practicingCourt","specification","practicingLocation","practicingStartDate","aadhar","registrationNo","pan","aadharFile","panFile","addNewAdvisor","addKYC","previous","NotificationManager","warning","fallback","className","path","render","props","exact","animation","color","toggleModal","sidebarMenu","modalTitle","CONSTANTS","TABLE_ID","addModal","onSubmit","titleId","formData","CATEGORY","list","Category","outline","style","marginLeft","marginBottom","onClick","headers","TABLE_HEADER","ADVISOR","items","isVisible","isVisibleToB2BUser","getAdvisorById","payload","languages","toString","updateAdvisorDetails","success","newAdvisorData","visibilityHandler","isBlocked","updateAdvisorAction","blockHandler","advisorId","filterParams","to"],"mappings":"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","file":"static/js/advisor.6d731a6c.chunk.js","sourcesContent":["import { Button, Container, Spinner } from 'reactstrap';\nimport React, { Suspense, useState, useEffect } from 'react';\nimport ViewTable from 'utils/ReactTableCards';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport CONSTANTS, { CATEGORY } from 'utils/CONSTANTS';\nimport IntlMessages from 'helpers/IntlMessages';\nimport {\n  addKYC,\n  addNewAdvisor,\n  getAdvisorById,\n  getAllAdvisors,\n  updateAdvisorAction,\n  updateAdvisorDetails,\n} from 'utils/API/api';\nimport { NotificationManager } from 'components/common/react-notifications';\nimport AddNewModalWithOutButton from 'components/advisor/add-new-Modal-with-out-button';\nimport AdminInfo from './advisorInfo';\n\nconst Advisor = ({ match, location }) => {\n  const [advisorData, setAdvisorData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [updateLoading, setUpdateLoading] = useState(false);\n  const [refresh, setRefresh] = useState(false);\n  const [modalOpen, setModalOpen] = useState(false);\n  const currentAdvisor = location.pathname.replace(`${match.url}/`, '');\n\n  useEffect(() => {\n    (async () => {\n      setLoading(true);\n      const res = await getAllAdvisors(currentAdvisor);\n      console.log(res);\n      if (res !== -1) {\n        setAdvisorData(\n          res?.data?.data?.data.map((advisor, index) => {\n            return {\n              ...advisor,\n              no: index + 1,\n              name: [advisor.name, advisor.id],\n            };\n          })\n        );\n      }\n      setLoading(false);\n    })();\n  }, [refresh, currentAdvisor]);\n\n  const addAdminHandler = (e) => {\n    e.preventDefault();\n    (async () => {\n      const payload1 = new FormData();\n      const payload2 = new FormData();\n\n      payload1.append('name', e.target.name.value);\n      payload1.append('charges', e.target.charges.value);\n      payload1.append('upiId', e.target.upiId.value);\n      payload1.append('profile', e.target.profile.files[0]);\n      payload1.append('about', e.target.about.value);\n      payload1.append('mobile', e.target.mobile.value);\n\n      payload1.append('expertise', e.target.expertise.value.trim());\n      payload1.append('languages', 'Hindi,English');\n\n      payload2.append('license', e.target.license.files[0]);\n      payload2.append('practicingCourt', e.target.practicingCourt.value);\n      payload2.append('specification', e.target.specification.value);\n      payload2.append('practicingLocation', e.target.practicingLocation.value);\n      payload2.append(\n        'practicingStartDate',\n        e.target.practicingStartDate.value\n      );\n      payload2.append('aadhar', e.target.aadhar.value);\n      payload2.append('registrationNo', e.target.registrationNo.value);\n      payload2.append('pan', e.target.pan.value);\n      payload2.append('aadharFile', e.target.aadharFile.files[0]);\n      payload2.append('panFile', e.target.panFile.files[0]);\n      setLoading(true);\n      const res = await addNewAdvisor(payload1);\n      if (res !== -1) {\n        payload2.append('AdvisorId', res?.data?.data?.data?.id);\n\n        const res2 = await addKYC(payload2);\n        if (res2 !== -1) {\n          setRefresh((previous) => !previous);\n          setModalOpen(!modalOpen);\n        } else {\n          NotificationManager.warning(\n            'Advisor KVC not submitted',\n            'Advsor KYC Error',\n            3000,\n            null,\n            null,\n            ''\n          );\n        }\n      }\n      setLoading(false);\n    })();\n  };\n\n  const blockHandler = (advisor, index) => {\n    (async () => {\n      setUpdateLoading(true);\n      const res = await updateAdvisorAction(advisor.id);\n      if (res !== -1) {\n        setAdvisorData((previous) => {\n          const newAdvisorData = [...previous];\n          newAdvisorData[index] = {\n            ...newAdvisorData[index],\n            isBlocked: !newAdvisorData[index].isBlocked,\n          };\n          return newAdvisorData;\n        });\n      }\n      setUpdateLoading(false);\n    })();\n  };\n\n  const visibilityHandler = (advisor, index) => {\n    (async () => {\n      setUpdateLoading(true);\n\n      const res = await getAdvisorById(advisor.id);\n      if (res !== -1) {\n        const payload = {\n          languages: res?.data?.data?.data?.languages.toString(),\n          isVisibleToB2BUser: !advisorData[index].isVisibleToB2BUser,\n        };\n        const res1 = await updateAdvisorDetails(payload, advisorData[index].id);\n        if (res1 !== -1) {\n          NotificationManager.success(\n            'Advisor Details Successfully updated',\n            'Advisor Updated',\n            null,\n            null,\n            ''\n          );\n          setAdvisorData((previous) => {\n            const newAdvisorData = [...previous];\n            newAdvisorData[index] = {\n              ...newAdvisorData[index],\n              isVisibleToB2BUser: !newAdvisorData[index].isVisibleToB2BUser,\n            };\n            return newAdvisorData;\n          });\n        }\n        setUpdateLoading(false);\n      }\n    })();\n  };\n\n  return (\n    <Suspense fallback={<div className=\"loading\" />}>\n      <Switch>\n        {/* <Redirect exact from={`${match.url}/`} to={`${match.url}/lawyer`} /> */}\n\n        <Route\n          path={`${match.url}/advisorinfo`}\n          render={(props) => <AdminInfo {...props} />}\n        />\n\n        <Route\n          exact\n          path={`${match.url}/${currentAdvisor}`}\n          render={() =>\n            !loading ? (\n              <>\n                {updateLoading && (\n                  <Container className=\"d-flex position-absolute justify-content-center align-items-center\">\n                    <Spinner\n                      animation=\"border\"\n                      className=\"d-inline-flex m-2 \"\n                      color=\"$theme-color-yellow-granola\"\n                    />\n                  </Container>\n                )}\n                <AddNewModalWithOutButton\n                  modalOpen={modalOpen}\n                  toggleModal={() => setModalOpen(!modalOpen)}\n                  sidebarMenu=\"NEW_DVISOR_MODAL\"\n                  modalTitle={CONSTANTS.TABLE_ID.addModal}\n                  onSubmit={addAdminHandler}\n                  titleId=\"Edit Category Details\"\n                  formData={{\n                    expertise: CATEGORY.list.map((Category) => {\n                      return {\n                        name: Category?.expertise.trim(),\n                        value: Category?.expertise.trim(),\n                      };\n                    }),\n                  }}\n                />\n\n                <Button\n                  outline\n                  color=\"primary\"\n                  style={{\n                    marginLeft: 'auto',\n                    marginBottom: '14px',\n                  }}\n                  className=\"top-right-button\"\n                  onClick={() => setModalOpen((previous) => !previous)}\n                >\n                  <IntlMessages id=\"survey.add-new\" />\n                </Button>\n\n                <ViewTable\n                  headers={CONSTANTS.TABLE_HEADER.ADVISOR}\n                  items={advisorData.map((advisor, index) => {\n                    return {\n                      ...advisor,\n                      no: index + 1,\n                      isVisible: [\n                        advisor.isVisibleToB2BUser,\n                        () => visibilityHandler(advisor, index),\n                      ],\n                      isBlocked: [\n                        !advisor.isBlocked,\n                        () => blockHandler(advisor, index),\n                      ],\n                    };\n                  })}\n                  advisorId={currentAdvisor}\n                  filterParams=\"name\"\n                />\n              </>\n            ) : (\n              <Container className=\"d-flex justify-content-center align-items-center\">\n                <Spinner\n                  animation=\"border\"\n                  className=\"d-inline-flex m-2 \"\n                  color=\"$theme-color-yellow-granola\"\n                />\n              </Container>\n            )\n          }\n        />\n\n        <Redirect to=\"/error\" />\n      </Switch>\n    </Suspense>\n  );\n};\nexport default Advisor;\n"],"sourceRoot":""}