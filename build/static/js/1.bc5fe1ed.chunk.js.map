{"version":3,"sources":["containers/forms/LargeSwitch.js","helpers/ThemeColors.js","components/charts/util.js","components/charts/SmallLine.js","data/charts.js","containers/directory/SmallLineCharts.js","components/ImageWithLoadingEffect.js","components/advisor/SingleLightbox.js"],"names":["LargeSwitch","isBlock","onChange","isAdvisor","useState","checkedPrimaryInverse","setCheckedPrimaryInverse","className","xxs","checked","primaryInverse","ThemeColors","rootStyle","getComputedStyle","document","body","themeColor1","getPropertyValue","trim","themeColor2","themeColor3","themeColor4","themeColor5","themeColor6","themeColor1_10","themeColor2_10","themeColor3_10","themeColor4_10","themeColor5_10","themeColor6_10","primaryColor","foregroundColor","separatorColor","Scatter","count","currentValue","style","fontSize","lineHeight","fontWeight","color","colors","smallChartData1","labels","datasets","label","borderColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","pointRadius","pointBorderWidth","pointHoverRadius","fill","borderWidth","data","datalabels","align","anchor","smallChartData2","SmallLineCharts","userKyc","itemClass","callRecords","onBlockHandler","advisorData","loading","onApprove","onReject","Row","sm","lg","xl","Card","CardBody","IntlMessages","id","SmallLine","undefined","Wallet","amount","length","Container","position","bottom","left","Spinner","animation","isBlocked","Kyc","isApproved","isRejected","display","justifyContent","right","Button","outline","onClick","ImageWithLoadingEffect","src","alt","LinearProgress","zIndex","width","height","defaultProps","isShowLoadingState","isHearo","SingleLightbox","thumb","large","isOpen","setIsOpen","to","location","mainSrc","onCloseRequest"],"mappings":"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","file":"static/js/1.bc5fe1ed.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Row } from 'reactstrap';\nimport Switch from 'rc-switch';\nimport 'rc-switch/assets/index.css';\nimport { Colxx } from 'components/common/CustomBootstrap';\n\nconst LargeSwitch = ({ isBlock, onChange, isAdvisor }) => {\n  const [checkedPrimaryInverse, setCheckedPrimaryInverse] = useState(isBlock);\n  return (\n    <Row className=\"mb-4\">\n      <Colxx xxs=\"6\">\n        <Switch\n          className=\"custom-switch custom-switch-primary-inverse\"\n          checked={isAdvisor ? isBlock : checkedPrimaryInverse}\n          onChange={(primaryInverse) => {\n            onChange(primaryInverse);\n            if (!isAdvisor) setCheckedPrimaryInverse(primaryInverse);\n          }}\n        />\n      </Colxx>\n    </Row>\n  );\n};\nexport default LargeSwitch;\n","/* eslint-disable import/prefer-default-export */\nexport const ThemeColors = () => {\n  const rootStyle = getComputedStyle(document.body);\n  return {\n    themeColor1: rootStyle.getPropertyValue('--theme-color-1').trim(),\n    themeColor2: rootStyle.getPropertyValue('--theme-color-2').trim(),\n    themeColor3: rootStyle.getPropertyValue('--theme-color-3').trim(),\n    themeColor4: rootStyle.getPropertyValue('--theme-color-4').trim(),\n    themeColor5: rootStyle.getPropertyValue('--theme-color-5').trim(),\n    themeColor6: rootStyle.getPropertyValue('--theme-color-6').trim(),\n    themeColor1_10: rootStyle.getPropertyValue('--theme-color-1-10').trim(),\n    themeColor2_10: rootStyle.getPropertyValue('--theme-color-2-10').trim(),\n    themeColor3_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\n    themeColor4_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\n    themeColor5_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\n    themeColor6_10: rootStyle.getPropertyValue('--theme-color-3-10').trim(),\n    primaryColor: rootStyle.getPropertyValue('--primary-color').trim(),\n    foregroundColor: rootStyle.getPropertyValue('--foreground-color').trim(),\n    separatorColor: rootStyle.getPropertyValue('--separator-color').trim(),\n  };\n};\n","import { ThemeColors } from 'helpers/ThemeColors';\n\nexport const chartTooltip = {\n  backgroundColor: ThemeColors().foregroundColor,\n  titleFontColor: ThemeColors().primaryColor,\n  borderColor: ThemeColors().separatorColor,\n  borderWidth: 0.5,\n  bodyFontColor: ThemeColors().primaryColor,\n  bodySpacing: 10,\n  xPadding: 15,\n  yPadding: 15,\n  cornerRadius: 0.15,\n};\n\nexport const centerTextPlugin = {\n  afterDatasetsUpdate() {},\n  beforeDraw(chart) {\n    const width = chart.chartArea.right;\n    const height = chart.chartArea.bottom;\n    const { ctx } = chart.chart;\n    ctx.restore();\n\n    let activeLabel = chart.data.labels[0];\n    let activeValue = chart.data.datasets[0].data[0];\n    let dataset = chart.data.datasets[0];\n    // eslint-disable-next-line no-underscore-dangle\n    let meta = dataset._meta[Object.keys(dataset._meta)[0]];\n    let { total } = meta;\n\n    let activePercentage = parseFloat(((activeValue / total) * 100).toFixed(1));\n    activePercentage = chart.legend.legendItems[0].hidden\n      ? 0\n      : activePercentage;\n\n    if (chart.pointAvailable) {\n      activeLabel = chart.data.labels[chart.pointIndex];\n      activeValue =\n        chart.data.datasets[chart.pointDataIndex].data[chart.pointIndex];\n\n      dataset = chart.data.datasets[chart.pointDataIndex];\n      // eslint-disable-next-line no-underscore-dangle\n      meta = dataset._meta[Object.keys(dataset._meta)[0]];\n      total = meta.total;\n      activePercentage = parseFloat(((activeValue / total) * 100).toFixed(1));\n      activePercentage = chart.legend.legendItems[chart.pointIndex].hidden\n        ? 0\n        : activePercentage;\n    }\n\n    ctx.font = '36px Nunito, sans-serif';\n    ctx.fillStyle = ThemeColors().primaryColor;\n    ctx.textBaseline = 'middle';\n\n    const text = `${activePercentage}%`;\n    const textX = Math.round((width - ctx.measureText(text).width) / 2);\n    const textY = height / 2;\n    ctx.fillText(text, textX, textY);\n\n    ctx.font = '14px Nunito, sans-serif';\n    ctx.textBaseline = 'middle';\n\n    const text2 = activeLabel;\n    const textX2 = Math.round((width - ctx.measureText(text2).width) / 2);\n    const textY2 = height / 2 - 30;\n    ctx.fillText(text2, textX2, textY2);\n\n    ctx.save();\n  },\n  // eslint-disable-next-line no-unused-vars\n  beforeEvent(chart, event, options) {\n    const firstPoint = chart.getElementAtEvent(event)[0];\n\n    if (firstPoint) {\n      // eslint-disable-next-line no-underscore-dangle,no-param-reassign\n      chart.pointIndex = firstPoint._index;\n      // eslint-disable-next-line no-underscore-dangle,no-param-reassign\n      chart.pointDataIndex = firstPoint._datasetIndex;\n      // eslint-disable-next-line no-param-reassign\n      chart.pointAvailable = true;\n    }\n  },\n};\n","/* eslint-disable no-unused-vars */\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-param-reassign */\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Chart } from 'chart.js';\n\nimport { smallLineChartOptions } from './config';\n\nconst addCommas = (nStr) => {\n  nStr += '';\n  const x = nStr.split('.');\n  let x1 = x[0];\n  const x2 = x.length > 1 ? `.${x[1]}` : '';\n  const rgx = /(\\d+)(\\d{3})/;\n  while (rgx.test(x1)) {\n    x1 = x1.replace(rgx, '$1,$2');\n  }\n  return x1 + x2;\n};\n\nconst Scatter = ({ count = '0' }) => {\n  const currentValue = count !== '$undefined' ? count : 0;\n  return (\n    <>\n      <div>\n        <p\n          className=\"lead color-theme-1 mb-1 value\"\n          style={{\n            fontSize: '2.4rem',\n            lineHeight: '4rem',\n            fontWeight: '800',\n            color: '#3b3b3b',\n          }}\n        >\n          {currentValue}\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default Scatter;\n","import { ThemeColors } from 'helpers/ThemeColors';\n// import { Button } from 'reactstrap';\n// import React from 'react';\n\nconst colors = ThemeColors();\n\nexport const lineChartData = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: '',\n      data: [54, 63, 60, 65, 60, 68, 60],\n      borderColor: colors.themeColor1,\n      pointBackgroundColor: colors.foregroundColor,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.foregroundColor,\n      pointRadius: 6,\n      pointBorderWidth: 2,\n      pointHoverRadius: 8,\n      fill: false,\n    },\n  ],\n};\n\nexport const polarAreaChartData = {\n  labels: ['Sales', 'Orders', 'Stock'],\n  datasets: [\n    {\n      data: [80, 90, 70],\n      borderWidth: 2,\n      borderColor: [colors.themeColor1, colors.themeColor2, colors.themeColor3],\n      backgroundColor: [\n        colors.themeColor1_10,\n        colors.themeColor2_10,\n        colors.themeColor3_10,\n      ],\n    },\n  ],\n};\n\nexport const areaChartData = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: '',\n      data: [54, 63, 60, 65, 60, 68, 60],\n      borderColor: colors.themeColor1,\n      pointBackgroundColor: colors.foregroundColor,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.foregroundColor,\n      pointRadius: 4,\n      pointBorderWidth: 2,\n      pointHoverRadius: 5,\n      fill: true,\n      borderWidth: 2,\n      backgroundColor: colors.themeColor1_10,\n    },\n  ],\n};\n\nexport const scatterChartData = {\n  datasets: [\n    {\n      borderWidth: 2,\n      showLine: false,\n      label: 'Cakes',\n      borderColor: colors.themeColor1,\n      backgroundColor: colors.themeColor1_10,\n      data: [\n        { x: 62, y: -78 },\n        { x: -0, y: 74 },\n        { x: -67, y: 45 },\n        { x: -26, y: -43 },\n        { x: -15, y: -30 },\n        { x: 65, y: -68 },\n        { x: -28, y: -61 },\n      ],\n    },\n    {\n      borderWidth: 2,\n      showLine: false,\n      label: 'Desserts',\n      borderColor: colors.themeColor2,\n      backgroundColor: colors.themeColor2_10,\n      data: [\n        { x: 79, y: 62 },\n        { x: 62, y: 0 },\n        { x: -76, y: -81 },\n        { x: -51, y: 41 },\n        { x: -9, y: 9 },\n        { x: 72, y: -37 },\n        { x: 62, y: -26 },\n      ],\n    },\n  ],\n};\n\nexport const barChartData = {\n  labels: ['January', 'February', 'March', 'April', 'May', 'June'],\n  datasets: [\n    {\n      label: 'Cakes',\n      borderColor: colors.themeColor1,\n      backgroundColor: colors.themeColor1_10,\n      data: [456, 479, 324, 569, 702, 600],\n      borderWidth: 2,\n    },\n    {\n      label: 'Desserts',\n      borderColor: colors.themeColor2,\n      backgroundColor: colors.themeColor2_10,\n      data: [364, 504, 605, 400, 345, 320],\n      borderWidth: 2,\n    },\n  ],\n};\n\nexport const radarChartData = {\n  datasets: [\n    {\n      label: 'Stock',\n      borderWidth: 2,\n      pointBackgroundColor: colors.themeColor1,\n      borderColor: colors.themeColor1,\n      backgroundColor: colors.themeColor1_10,\n      data: [80, 90, 70],\n    },\n    {\n      label: 'Order',\n      borderWidth: 2,\n      pointBackgroundColor: colors.themeColor2,\n      borderColor: colors.themeColor2,\n      backgroundColor: colors.themeColor2_10,\n      data: [68, 80, 95],\n    },\n  ],\n  labels: ['Cakes', 'Desserts', 'Cupcakes'],\n};\n\nexport const pieChartData = {\n  labels: ['Cakes', 'Cupcakes', 'Desserts'],\n  datasets: [\n    {\n      label: '',\n      borderColor: [colors.themeColor1, colors.themeColor2, colors.themeColor3],\n      backgroundColor: [\n        colors.themeColor1_10,\n        colors.themeColor2_10,\n        colors.themeColor3_10,\n      ],\n      borderWidth: 2,\n      data: [15, 25, 20],\n    },\n  ],\n};\n\nexport const doughnutChartData = {\n  labels: ['Cakes', 'Cupcakes', 'Desserts'],\n  datasets: [\n    {\n      label: '',\n      borderColor: [colors.themeColor3, colors.themeColor2, colors.themeColor1],\n      backgroundColor: [\n        colors.themeColor3_10,\n        colors.themeColor2_10,\n        colors.themeColor1_10,\n      ],\n      borderWidth: 2,\n      data: [15, 25, 20],\n    },\n  ],\n};\n\nexport const smallChartData1 = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: 'Total Orders',\n      borderColor: colors.themeColor1,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.themeColor1,\n      pointRadius: 2,\n      pointBorderWidth: 3,\n      pointHoverRadius: 2,\n      fill: false,\n      borderWidth: 2,\n      data: [1250, 1300, 1550, 921, 1810, 1106, 1610],\n      datalabels: {\n        align: 'end',\n        anchor: 'end',\n      },\n    },\n  ],\n};\n\nexport const smallChartData2 = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: 'Pending Orders',\n      borderColor: colors.themeColor1,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.themeColor1,\n      pointRadius: 2,\n      pointBorderWidth: 3,\n      pointHoverRadius: 2,\n      fill: false,\n      borderWidth: 2,\n      data: [115, 120, 300, 222, 105, 85, 36],\n      datalabels: {\n        align: 'end',\n        anchor: 'end',\n      },\n    },\n  ],\n};\n\nexport const smallChartData3 = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: 'Total Orders',\n      borderColor: colors.themeColor1,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.themeColor1,\n      pointRadius: 2,\n      pointBorderWidth: 3,\n      pointHoverRadius: 2,\n      fill: false,\n      borderWidth: 2,\n      data: [350, 452, 762, 952, 630, 85, 158],\n      datalabels: {\n        align: 'end',\n        anchor: 'end',\n      },\n    },\n  ],\n};\n\nexport const smallChartData4 = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: 'Total Orders',\n      borderColor: colors.themeColor1,\n      pointBorderColor: colors.themeColor1,\n      pointHoverBackgroundColor: colors.themeColor1,\n      pointHoverBorderColor: colors.themeColor1,\n      pointRadius: 2,\n      pointBorderWidth: 3,\n      pointHoverRadius: 2,\n      fill: false,\n      borderWidth: 2,\n      data: [200, 452, 250, 630, 125, 85, 20],\n      datalabels: {\n        align: 'end',\n        anchor: 'end',\n      },\n    },\n  ],\n};\n\n// const smallChartData4 = () => {\n//   <div>\n//     <Button>Active</Button>\n//     <Button>Inactive</Button>\n//   </div>;\n// };\n\nexport const conversionChartData = {\n  labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  datasets: [\n    {\n      label: '',\n      data: [65, 60, 68, 60, 58, 63, 60],\n      borderColor: colors.themeColor2,\n      pointBackgroundColor: colors.foregroundColor,\n      pointBorderColor: colors.themeColor2,\n      pointHoverBackgroundColor: colors.themeColor2,\n      pointHoverBorderColor: colors.foregroundColor,\n      pointRadius: 4,\n      pointBorderWidth: 2,\n      pointHoverRadius: 5,\n      fill: true,\n      borderWidth: 2,\n      backgroundColor: colors.themeColor2_10,\n    },\n  ],\n};\n\n// export default smallChartData4;\n","import React from 'react';\nimport { Row, Card, CardBody, Button, Container, Spinner } from 'reactstrap';\n\nimport { Colxx } from 'components/common/CustomBootstrap';\nimport { SmallLineChart } from 'components/charts';\n\nimport { smallChartData1, smallChartData2 } from 'data/charts';\nimport IntlMessages from 'helpers/IntlMessages';\nimport LargeSwitch from 'containers/forms/LargeSwitch';\n\nconst SmallLineCharts = ({\n  itemClass = 'directory-small-chart',\n  callRecords = 0,\n  isAdvisor,\n  onBlockHandler,\n  advisorData,\n  loading,\n  onApprove,\n  onReject,\n}) => {\n  const isKyc = (userKyc) => {\n    if (userKyc.isApproved === true) return false;\n    if (userKyc.isRejected) return false;\n    return true;\n  };\n\n\n  return (\n    <Row>\n      <Colxx xxs=\"6\" sm=\"6\" lg=\"6\" xl=\"6\" className=\"mb-4\">\n        <Card className={itemClass}>\n          <CardBody>\n            <IntlMessages id=\"userinfo.wallet\" />\n            <SmallLineChart\n              data={smallChartData1}\n              count={`₹ ${advisorData?.Wallet?.amount !== undefined\n                ? advisorData?.Wallet?.amount\n                : 0\n                }`}\n            />\n          </CardBody>\n        </Card>\n      </Colxx>\n      <Colxx xxs=\"6\" sm=\"6\" lg=\"6\" xl=\"6\" className=\"mb-4\">\n        <Card className={itemClass}>\n          <CardBody>\n            <IntlMessages id=\"userinfo.call\" />\n            <SmallLineChart data={smallChartData2}\n\n              count={`${callRecords !== undefined\n                ? callRecords.length\n                : 0\n                }`} />\n\n          </CardBody>\n        </Card>\n      </Colxx>\n      {isAdvisor && (\n        <>\n          <Colxx xxs=\"6\" sm=\"6\" lg=\"6\" xl=\"6\" className=\"mb-4\">\n            <Card className={itemClass}>\n              <Container\n                style={{\n                  position: 'absolute',\n                  bottom: '114px',\n                  left: '8px',\n                  fontSize: '17px',\n                }}\n              >\n                <IntlMessages id=\"userinfo.action\" />\n              </Container>\n              <Container\n                style={{ position: 'absolute', bottom: '48px', left: '8px' }}\n              >\n                {!loading ? (\n                  <LargeSwitch\n                    isBlock={!advisorData.isBlocked}\n                    onChange={onBlockHandler}\n                    isAdvisor\n                  />\n                ) : (\n                  loading && (\n                    <Container className=\"d-flex justify-content-center align-items-center\">\n                      <Spinner\n                        animation=\"border\"\n                        className=\"d-inline-flex m-2 \"\n                        color=\"$theme-color-yellow-granola\"\n                      />\n                    </Container>\n                  )\n                )}\n              </Container>\n            </Card>\n          </Colxx>\n          {advisorData?.Kyc && isKyc(advisorData?.Kyc) && (\n            <Colxx xxs=\"6\" sm=\"6\" lg=\"6\" xl=\"6\" className=\"mb-4\">\n              <Card className={itemClass}>\n                <Container\n                  style={{\n                    position: 'absolute',\n                    bottom: '114px',\n                    left: '8px',\n                    fontSize: '17px',\n                  }}\n                >\n                  <IntlMessages id=\"advisorinfo.transaction\" />\n                </Container>\n                <Container\n                  style={{\n                    display: 'flex',\n                    justifyContent: 'space-evenly',\n                    position: 'absolute',\n                    bottom: '63px',\n                    right: '33px',\n                  }}\n                >\n                  <Button\n                    outline\n                    color=\"success\"\n                    onClick={() => onApprove(advisorData)}\n                  >\n                    Approve\n                  </Button>\n                  <Button\n                    outline\n                    color=\"danger\"\n                    onClick={() => onReject(advisorData)}\n                  >\n                    Reject\n                  </Button>\n                </Container>\n              </Card>\n            </Colxx>\n          )}\n        </>\n      )}\n    </Row>\n  );\n};\n\nexport default SmallLineCharts;\n","import React from 'react';\nimport { LinearProgress } from '@mui/material';\nimport Image from 'material-ui-image';\n\nconst ImageWithLoadingEffect = ({ id, onClick, src, className, alt }) => {\n  return (\n    <>\n      <Image\n        id={id}\n        onClick={onClick}\n        src={src}\n        className={className}\n        alt={alt}\n        loading={\n          <LinearProgress\n            color=\"inherit\"\n            className={className}\n            style={{\n              position: 'absolute',\n              zIndex: '1',\n              width: '100%',\n              height: '100%',\n            }}\n          />\n        }\n      />\n    </>\n  );\n};\n\nImageWithLoadingEffect.defaultProps = {\n  onClick: () => {},\n  src: '',\n  className: '',\n  alt: '',\n  id: '',\n  isShowLoadingState: true,\n  isHearo: false,\n  style: 'defult',\n};\n\nexport default ImageWithLoadingEffect;\n","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport Lightbox from 'react-image-lightbox';\nimport ImageWithLoadingEffect from 'components/ImageWithLoadingEffect';\n\nconst SingleLightbox = ({ thumb, className, large }) => {\n  const [isOpen, setIsOpen] = useState(false);\n\n  return (\n    <>\n      <NavLink to=\"#\" location={{}} onClick={() => setIsOpen(true)}>\n        <ImageWithLoadingEffect\n          src={thumb}\n          alt=\"thumbnail\"\n          className={className}\n        />\n      </NavLink>\n\n      {isOpen && (\n        <Lightbox mainSrc={large} onCloseRequest={() => setIsOpen(false)} />\n      )}\n    </>\n  );\n};\nexport default SingleLightbox;\n"],"sourceRoot":""}